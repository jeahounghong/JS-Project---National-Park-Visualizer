/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (function() { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

eval("// const ParksAPI = require('./parksAPI');\nconst US_MAP = __webpack_require__(/*! ./scripts/us_map */ \"./src/scripts/us_map.js\"); // let api_data = ParksAPI.data();\n// let node1 = document.createElement(\"h1\")\n// node1.innerHTML(\"POOPOO\")\n// document.getElementById(\"body\").appendChild(node1)\n\n\nlet parks; // fetch('https://developer.nps.gov/api/v1/parks?limit=467&api_key=P3sQ0KIWhYmCMsDJp5VDzLSAAOvDY0X7psUzGTMN')\n\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n  fetch('https://developer.nps.gov/api/v1/parks?limit=467&api_key=P3sQ0KIWhYmCMsDJp5VDzLSAAOvDY0X7psUzGTMN').then(res => res.json()).then(res => parks = res.data).then(populateMap).then(populateAllParks);\n});\n\nfunction populateMap() {\n  US_MAP.generateMap(parks);\n  console.log(parks); // console.log(Object.keys(parks));\n}\n\nfunction populateAllParks() {\n  // Some national parks are not rendered because they do not appear on the geoAlbers projection. It should be decided whether or not these should have a parks page\n  let parks_list = document.getElementById(\"parks_ul\");\n\n  for (let i = 0; i < parks.length; i++) {\n    const node = document.createElement(\"li\");\n    node.innerText = \"\".concat(parks[i].fullName, \", \").concat(parks[i].states); // console.log(parks[i].entranceFees)\n\n    parks_list.appendChild(node);\n  } // console.log(parks.length)\n\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvaW5kZXguanMuanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFDQyxNQUFNQSxNQUFNLEdBQUdDLG1CQUFPLENBQUMsaURBQUQsQ0FBdEIsQyxDQUNEO0FBRUE7QUFDQTtBQUNBOzs7QUFHQSxJQUFJQyxLQUFKLEMsQ0FDQTs7QUFFQUMsUUFBUSxDQUFDQyxnQkFBVCxDQUEwQixrQkFBMUIsRUFBOEMsTUFBTTtFQUNoREMsS0FBSyxDQUFDLG1HQUFELENBQUwsQ0FDS0MsSUFETCxDQUNVQyxHQUFHLElBQUlBLEdBQUcsQ0FBQ0MsSUFBSixFQURqQixFQUVLRixJQUZMLENBRVVDLEdBQUcsSUFBSUwsS0FBSyxHQUFHSyxHQUFHLENBQUNFLElBRjdCLEVBR0tILElBSEwsQ0FHVUksV0FIVixFQUlLSixJQUpMLENBSVVLLGdCQUpWO0FBS0gsQ0FORDs7QUFRQSxTQUFTRCxXQUFULEdBQXNCO0VBQ2xCVixNQUFNLENBQUNZLFdBQVAsQ0FBbUJWLEtBQW5CO0VBQ0FXLE9BQU8sQ0FBQ0MsR0FBUixDQUFZWixLQUFaLEVBRmtCLENBR2xCO0FBQ0g7O0FBRUQsU0FBU1MsZ0JBQVQsR0FBMkI7RUFDdkI7RUFDQSxJQUFJSSxVQUFVLEdBQUdaLFFBQVEsQ0FBQ2EsY0FBVCxDQUF3QixVQUF4QixDQUFqQjs7RUFDQSxLQUFJLElBQUlDLENBQUMsR0FBRyxDQUFaLEVBQWVBLENBQUMsR0FBR2YsS0FBSyxDQUFDZ0IsTUFBekIsRUFBaUNELENBQUMsRUFBbEMsRUFBcUM7SUFDakMsTUFBTUUsSUFBSSxHQUFHaEIsUUFBUSxDQUFDaUIsYUFBVCxDQUF1QixJQUF2QixDQUFiO0lBQ0FELElBQUksQ0FBQ0UsU0FBTCxhQUFvQm5CLEtBQUssQ0FBQ2UsQ0FBRCxDQUFMLENBQVNLLFFBQTdCLGVBQTBDcEIsS0FBSyxDQUFDZSxDQUFELENBQUwsQ0FBU00sTUFBbkQsRUFGaUMsQ0FHakM7O0lBQ0FSLFVBQVUsQ0FBQ1MsV0FBWCxDQUF1QkwsSUFBdkI7RUFDSCxDQVJzQixDQVN2Qjs7QUFFSCIsInNvdXJjZXMiOlsid2VicGFjazovL2pzLXByb2plY3QvLi9zcmMvaW5kZXguanM/YjYzNSJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBjb25zdCBQYXJrc0FQSSA9IHJlcXVpcmUoJy4vcGFya3NBUEknKTtcbiBjb25zdCBVU19NQVAgPSByZXF1aXJlKCcuL3NjcmlwdHMvdXNfbWFwJylcbi8vIGxldCBhcGlfZGF0YSA9IFBhcmtzQVBJLmRhdGEoKTtcblxuLy8gbGV0IG5vZGUxID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImgxXCIpXG4vLyBub2RlMS5pbm5lckhUTUwoXCJQT09QT09cIilcbi8vIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwiYm9keVwiKS5hcHBlbmRDaGlsZChub2RlMSlcblxuXG5sZXQgcGFya3M7XG4vLyBmZXRjaCgnaHR0cHM6Ly9kZXZlbG9wZXIubnBzLmdvdi9hcGkvdjEvcGFya3M/bGltaXQ9NDY3JmFwaV9rZXk9UDNzUTBLSVdoWW1DTXNESnA1VkR6TFNBQU92RFkwWDdwc1V6R1RNTicpXG5cbmRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoXCJET01Db250ZW50TG9hZGVkXCIsICgpID0+IHtcbiAgICBmZXRjaCgnaHR0cHM6Ly9kZXZlbG9wZXIubnBzLmdvdi9hcGkvdjEvcGFya3M/bGltaXQ9NDY3JmFwaV9rZXk9UDNzUTBLSVdoWW1DTXNESnA1VkR6TFNBQU92RFkwWDdwc1V6R1RNTicpXG4gICAgICAgIC50aGVuKHJlcyA9PiByZXMuanNvbigpKVxuICAgICAgICAudGhlbihyZXMgPT4gcGFya3MgPSByZXMuZGF0YSlcbiAgICAgICAgLnRoZW4ocG9wdWxhdGVNYXApXG4gICAgICAgIC50aGVuKHBvcHVsYXRlQWxsUGFya3MpXG59KVxuXG5mdW5jdGlvbiBwb3B1bGF0ZU1hcCgpe1xuICAgIFVTX01BUC5nZW5lcmF0ZU1hcChwYXJrcyk7XG4gICAgY29uc29sZS5sb2cocGFya3MpXG4gICAgLy8gY29uc29sZS5sb2coT2JqZWN0LmtleXMocGFya3MpKTtcbn1cblxuZnVuY3Rpb24gcG9wdWxhdGVBbGxQYXJrcygpe1xuICAgIC8vIFNvbWUgbmF0aW9uYWwgcGFya3MgYXJlIG5vdCByZW5kZXJlZCBiZWNhdXNlIHRoZXkgZG8gbm90IGFwcGVhciBvbiB0aGUgZ2VvQWxiZXJzIHByb2plY3Rpb24uIEl0IHNob3VsZCBiZSBkZWNpZGVkIHdoZXRoZXIgb3Igbm90IHRoZXNlIHNob3VsZCBoYXZlIGEgcGFya3MgcGFnZVxuICAgIGxldCBwYXJrc19saXN0ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJwYXJrc191bFwiKTtcbiAgICBmb3IobGV0IGkgPSAwOyBpIDwgcGFya3MubGVuZ3RoOyBpKyspe1xuICAgICAgICBjb25zdCBub2RlID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImxpXCIpO1xuICAgICAgICBub2RlLmlubmVyVGV4dCA9IGAke3BhcmtzW2ldLmZ1bGxOYW1lfSwgJHtwYXJrc1tpXS5zdGF0ZXN9YDtcbiAgICAgICAgLy8gY29uc29sZS5sb2cocGFya3NbaV0uZW50cmFuY2VGZWVzKVxuICAgICAgICBwYXJrc19saXN0LmFwcGVuZENoaWxkKG5vZGUpO1xuICAgIH1cbiAgICAvLyBjb25zb2xlLmxvZyhwYXJrcy5sZW5ndGgpXG5cbn0iXSwibmFtZXMiOlsiVVNfTUFQIiwicmVxdWlyZSIsInBhcmtzIiwiZG9jdW1lbnQiLCJhZGRFdmVudExpc3RlbmVyIiwiZmV0Y2giLCJ0aGVuIiwicmVzIiwianNvbiIsImRhdGEiLCJwb3B1bGF0ZU1hcCIsInBvcHVsYXRlQWxsUGFya3MiLCJnZW5lcmF0ZU1hcCIsImNvbnNvbGUiLCJsb2ciLCJwYXJrc19saXN0IiwiZ2V0RWxlbWVudEJ5SWQiLCJpIiwibGVuZ3RoIiwibm9kZSIsImNyZWF0ZUVsZW1lbnQiLCJpbm5lclRleHQiLCJmdWxsTmFtZSIsInN0YXRlcyIsImFwcGVuZENoaWxkIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/index.js\n");

/***/ }),

/***/ "./src/scripts/us_map.js":
/*!*******************************!*\
  !*** ./src/scripts/us_map.js ***!
  \*******************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"generateMap\": function() { return /* binding */ generateMap; }\n/* harmony export */ });\n// document.addEventListener(\"DOMContentLoaded\", () => {\nfunction generateMap(parks) {\n  let currentState = \"United States of America\";\n  document.addEventListener('submit', event => {\n    event.preventDefault();\n    let state = document.getElementById(\"state_select\").value;\n    let statePath = document.getElementById(state);\n    removeElementsByClass(\"parks\");\n    zoomToState(state);\n  });\n  let states_features = [];\n  const idToStates = {\n    1: \"AL\",\n    2: \"AK\",\n    3: \"AR\",\n    4: \"AZ\",\n    5: \"AR\",\n    6: \"CA\",\n    7: \"CT\",\n    8: \"CO\",\n    9: \"CT\",\n    10: \"DE\",\n    11: \"GA\",\n    12: \"FL\",\n    13: \"GA\",\n    14: \"IL\",\n    15: \"HI\",\n    16: \"ID\",\n    17: \"IL\",\n    18: \"IN\",\n    19: \"IA\",\n    20: \"KS\",\n    21: \"MD\",\n    22: \"LA\",\n    23: \"ME\",\n    24: \"MD\",\n    25: \"MA\",\n    26: \"MI\",\n    27: \"MN\",\n    28: \"NE\",\n    29: \"MO\",\n    30: \"MT\",\n    31: \"NE\",\n    32: \"NV\",\n    33: \"NH\",\n    34: \"NJ\",\n    35: \"NM\",\n    36: \"NY\",\n    37: \"NC\",\n    38: \"ND\",\n    39: \"OH\",\n    40: \"OK\",\n    41: \"OR\",\n    42: \"PA\",\n    43: \"TN\",\n    44: \"RI\",\n    45: \"SC\",\n    46: \"SD\",\n    47: \"TN\",\n    48: \"TX\",\n    49: \"WV\",\n    50: \"VT\",\n    51: \"VA\",\n    53: \"WA\",\n    54: \"WV\",\n    55: \"WI\"\n  };\n  var margin = {\n    // top: 10,\n    // bottom: 10,\n    // left: 10,\n    // right: 10,\n    top: 0,\n    bottom: 0,\n    left: 0,\n    right: 0\n  },\n      width = parseInt(d3.select('.viz').style('width')),\n      width = width - margin.left - margin.right,\n      mapRatio = 0.5 // previously 0.5\n  ,\n      height = width * mapRatio,\n      active = d3.select(null);\n  var svg = d3.select('.viz').append('svg').attr('class', 'center-container').attr('height', height + margin.top + margin.bottom).attr('width', width + margin.left + margin.right);\n  svg.append('rect').attr('class', 'background center-container').attr('height', height + margin.top + margin.bottom).attr('width', width + margin.left + margin.right).on('click', clicked);\n  Promise.resolve(d3.json('https://gist.githubusercontent.com/mbostock/4090846/raw/us.json')).then(ready);\n  let projection = d3.geoAlbersUsa().translate([width / 2, height / 2]).scale(width);\n  var path = d3.geoPath().projection(projection);\n  var g = svg.append(\"g\").attr('class', 'center-container center-items us-state').attr('transform', 'translate(' + margin.left + ',' + margin.top + ')').attr('width', width + margin.left + margin.right).attr('height', height + margin.top + margin.bottom);\n  let header = d3.select('.viz').append('div').attr('class', 'location-viewer').append('div').attr('class', 'location').html(\"You are currently viewing: \".concat(currentState));\n\n  function ready(us) {\n    g.append(\"g\").attr(\"id\", \"counties\").selectAll(\"path\").data(topojson.feature(us, us.objects.counties).features).enter().append(\"path\").attr(\"d\", path).attr(\"class\", \"county-boundary\").on(\"click\", reset);\n    g.append(\"g\").attr(\"id\", \"states\").selectAll(\"path\").data(topojson.feature(us, us.objects.states).features).enter().append(\"path\").attr(\"d\", path).attr(\"class\", \"state\").attr(\"id\", d => {\n      // console.log(d);\n      if (idToStates[d.id]) {\n        // console.log(d.id);\n        // console.log(idToStates[d.id])\n        states_features.push(d);\n        return idToStates[d.id];\n      } else {\n        return \"\".concat(d.id);\n      }\n    }).on(\"click\", clicked);\n    g.append(\"path\").datum(topojson.mesh(us, us.objects.states, function (a, b) {\n      return a !== b;\n    })).attr(\"id\", \"state-borders\").attr(\"d\", path);\n    g.append(\"g\") // .attr(\"id\",\"parks\")\n    .selectAll(\"path\").data(parks).enter().append(\"circle\").attr(\"id\", function (d) {\n      return d.id;\n    }).attr(\"class\", \"parks\") // .attr(\"id\", d.id)\n    .attr(\"r\", 2).attr(\"cx\", function (d) {\n      // console.log(d.id)\n      let coords = projection([parseFloat(d.longitude), parseFloat(d.latitude)]);\n\n      if (coords) {\n        return coords[0];\n      } else {\n        return null;\n      }\n    }).attr(\"cy\", function (d) {\n      let coords = projection([parseFloat(d.longitude), parseFloat(d.latitude)]);\n\n      if (coords) {\n        return coords[1];\n      } else {\n        return null;\n      }\n    });\n  }\n\n  function clicked(d) {\n    // console.log(d)\n    currentState = idToStates[d.id];\n    d3.select('.location').html(\"You are currently viewing: \".concat(currentState));\n    if (d3.select('.background').node() === this) return reset();\n    if (active.node() === this) return reset();\n    active.classed(\"active\", false);\n    active = d3.select(this).classed(\"active\", true);\n    var bounds = path.bounds(d),\n        dx = bounds[1][0] - bounds[0][0],\n        dy = bounds[1][1] - bounds[0][1],\n        x = (bounds[0][0] + bounds[1][0]) / 2,\n        y = (bounds[0][1] + bounds[1][1]) / 2,\n        scale = .9 / Math.max(dx / width, dy / height),\n        translate = [width / 2 - scale * x, height / 2 - scale * y];\n    g.transition().duration(750).style(\"stroke-width\", 1.5 / scale + \"px\").attr(\"transform\", \"translate(\" + translate + \")scale(\" + scale + \")\");\n  }\n\n  function zoomToState(state) {\n    // console.log(state)\n    for (let i = 1; i < 60; i++) {\n      if (idToStates[i] === state) {\n        // console.log(i)\n        clicked(states_features[i - 1]);\n      }\n    }\n  }\n\n  function removeElementsByClass(className) {\n    const elements = document.getElementsByClassName(className);\n    console.log(elements);\n\n    while (elements.length > 0) {\n      elements[0].parentNode.removeChild(elements[0]);\n    }\n  }\n\n  function reset() {\n    currentState = \"United States of America\";\n    d3.select('.location').html(\"You are currently viewing: \".concat(currentState));\n    active.classed(\"active\", false);\n    active = d3.select(null);\n    g.transition().delay(100).duration(750).style(\"stroke-width\", \"1.5px\").attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n  }\n} // module.exports.generateMap = us_map;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/scripts/us_map.js\n");

/***/ }),

/***/ "./src/index.scss":
/*!************************!*\
  !*** ./src/index.scss ***!
  \************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n// extracted by mini-css-extract-plugin\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvaW5kZXguc2Nzcy5qcyIsIm1hcHBpbmdzIjoiO0FBQUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9qcy1wcm9qZWN0Ly4vc3JjL2luZGV4LnNjc3M/OTc0NSJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBleHRyYWN0ZWQgYnkgbWluaS1jc3MtZXh0cmFjdC1wbHVnaW5cbmV4cG9ydCB7fTsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/index.scss\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	!function() {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = function(exports, definition) {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	!function() {
/******/ 		__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	!function() {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = function(exports) {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	}();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	__webpack_require__("./src/index.js");
/******/ 	var __webpack_exports__ = __webpack_require__("./src/index.scss");
/******/ 	
/******/ })()
;